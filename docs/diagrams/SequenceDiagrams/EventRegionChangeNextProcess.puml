@startuml Event Next Process
skinparam style strictuml
title Event - Region change (emitted next processing loop)

activate Core

Core -> Player: process(world)

activate Player
note right of Player
	Player moves, so that region changes
end note
Player -> Event: getEvents(event)
activate Event
note right of Event
	Event is collected from queue
end note
Event -> Player: Events
deactivate Event

Player -> Event: emitEvent(event)
activate Event
note right of Event
	Event is stored in queue
end note
Event -> Player: void
deactivate Event

note right of Player
	Player continues processing
end note

Player -> Core: void
deactivate Player

Core -> World: process(world)
activate World
World -> Event: getEvents(event)
activate Event
note left of Event
	Event is collected from queue
end note
Event -> World: Events
deactivate Event
World -> Core: void
deactivate World

note right of Core
	Core done processing
end note

Core -> Event: stepQueue()
activate Event
note right of Event
	Queue is rotated, 
	so events emittet in last process loop, 
	now can be collected
end note
Event -> Core: void
deactivate Event

note right of Core
	Core moves to next processing loop
end note

Core -> Player: process(world)

activate Player
note right of Player
end note
Player -> Event: getEvents(event)
activate Event
note right of Event
	Event is collected from queue
end note
Event -> Player: Events
deactivate Event

note right of Player
	Player continues processing
end note

Player -> Core: void
deactivate Player

Core -> World: process(world)
activate World
World -> Event: getEvents(event)
activate Event
note left of Event
	Event is collected from queue
end note
Event -> World: Events
deactivate Event
World -> Core: void
deactivate World

note right of Core
	Core done processing
end note

@enduml