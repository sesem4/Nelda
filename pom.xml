<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>dk.sdu.sesem4</groupId>
	<artifactId>Nelda</artifactId>
	<version>0.0.0</version>
	<packaging>pom</packaging>
	<name>Nelda</name>
	
	<properties>
		<java>java</java> <!-- This was missing, and is required for ${java} to work in executable -->
		<maven.compiler.source>18</maven.compiler.source>
		<maven.compiler.target>18</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<shadedlibgdx.version>1.0.7</shadedlibgdx.version>
	</properties>
	
	<modules>
		<module>Collision</module>
		<module>Common</module>
		<module>Core</module>
		<module>Heart</module>
		<module>Map</module>
		<module>Player</module>
		<module>Sword</module>
		<module>EnemyOctorok</module>
	</modules>
	
	<repositories>
		<repository>
			<id>github</id>
			<name>GitHub sesem4 Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/sesem4/ShadedLibGDX</url>
		</repository>
	</repositories>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>dk.sdu.mmmi.cbse</groupId>
				<artifactId>shadedlibgdx</artifactId>
				<version>1.0.1-SNAPSHOT</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<build>
		<plugins>
			<!-- Clean -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
			<!-- Compile -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<fork>true</fork>
				</configuration>
			</plugin>
			<!-- execute the resulting project -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>${java}</executable>
					<workingDirectory>.</workingDirectory>
					<longModulepath>false</longModulepath>
					<arguments>
						<argument>-Dorg.lwjgl.util.Debug=true</argument>
						<argument>-Djava.library.path=libs</argument>
						<argument>--module-path=mods</argument>
						<argument>--class-path=libs/*</argument>
						<!-- because spark.core is an automatic module and actually required,
						monitor.observer.zero would be resolved as well and does not need
						to be added explicitly;
						I still wanted to do it for clarity, but for some reason that results
						in "java.lang.module.FindException: Module monitor.observer.zero not found";
						strange... -->
						<!--<argument>&#45;&#45;add-modules=monitor.observer.zero</argument>-->
						<argument>--module=Core/dk.sdu.sesem4.core.Main</argument>
					</arguments>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<!-- parent project should delete 'mods-mvn' -->
			<id>parent-project</id>
			<activation>
				<file>
					<missing>src</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.2.0</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>mods</directory>
								</fileset>
								<fileset>
									<directory>libs</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- child projects should copy artifact into 'mods-mvn' -->
			<id>child-project</id>
			<activation>
				<file>
					<exists>src</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.0.2</version>
						<executions>
							<execution>
								<id>copy-installed</id>
								<phase>install</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<version>${project.version}</version>
											<type>jar</type>
										</artifactItem>
									</artifactItems>
									<outputDirectory>../mods</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>