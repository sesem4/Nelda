@startuml Class diagram
allow_mixing

left to right direction

/' allowmixing '/
'https://plantuml.com/class-diagram
/' skinparam component{
    BackgroundColor Green
} '/

component Common{
    package src\main\java\dk\sdu\sesem4\common\SPI{
    interface CombatSPI{
        + {abstract} spawnWeapon(gameData:GameData, world:World, weapon:Entity ); void

    }
    interface ControlSPI{
        + {abstract} move(gameData:GameData , world:World , entity:Entity ): float[]

    }
    interface EnemySpawnerSPI{
        + {abstract} spawnEnemy(gameData:GameData , world:World , x:float ,  y:float):void

    }

    interface PickupSPI{
         pickup(gameData:GameData , world:World , item:Entity): Item

    }
    interface PluginServiceSPI{
        +  start(gameData:GameData , world:World ): void
        +  stop(gameData:GameData, world:World ): void
    }
    interface PostProcessingServiceSPI{
        + {abstract} postProcess(gamedata:GameData,world:World,priority:Priorirty): void

    }
    interface ProcessingServiceSPI{
        + {abstract} process(gameData:GameData , world:World , priority:Priority): void

    }



}
}






component Player {
    package src\main\java\dk\sdu\sesem4\player{

        class PlayerProcessing {
            + process(gameData:GameData , world:World , priority:Priority):void
            + updateShape(entity:Entity): void

     }
     ProcessingServiceSPI <|.. PlayerProcessing


        class PlayerPlugin{
            
                + start(gameData:GameData , world:World ): void
                + stop(gameData:GameData , world:World ): void
                + createEnmey(gameData:GameData): void
        }
        PluginServiceSPI <|.. PlayerPlugin
        ControlSPI <|.. PlayerProcessing
    }
}








    



component Enemy{
    package src\main\java\dk\sdu\sesem4\enemy{
        class EnemyProcessing{
            + process(gameData:GameData , world:World , priority:Priority): void
            + updateShape(entity:Entity): void
            + spawnEnemy(gameData:GameData , world:World , x:float ,  y:float):void
        }
        EnemySpawnerSPI <|.. EnemyProcessing
           ProcessingServiceSPI <|.. EnemyProcessing

    }
}
component Weapon{
    package src\main\java\dk\sdu\sesem4\weapon{
        class WeaponProcessing{
            + process(gameData:GameData , world:World , priority:Priority): void
            + updateShape(entity:Entity): void
            + spawnWeapon(gameData:GameData, world:World, weapon:Entity ): void
        }
        CombatSPI <|.. WeaponProcessing
        ProcessingServiceSPI <|.. WeaponProcessing
    }
}



@enduml


