@startuml
skinparam style strictuml
title Move  player
Actor Player
activate Core
Core -> Core

Core -> Common: process()
activate Common
Common -> Common: getPlayerPosition()
Activate Player
Player -> KeyboardControl: move()
deactivate Player
activate KeyboardControl
Common -> KeyboardControl: getInput()
activate KeyboardControl
KeyboardControl -> Common:
deactivate KeyboardControl
deactivate KeyboardControl
Common -> Common: setPlayerPosition()
Common -> Core: update()
deactivate Common

@enduml

@startuml
skinparam style strictuml
title Weapon collision
    Actor Player

    activate Core
    Core -> Core

    Core -> Common: process()
group
    activate Common
    Common -> Common: getPosition(Entity, enemy)
    Common -> Common: getPosition(Entity, weapon)
    activate Player
    Player -> Common: attack(Entity sword)
    deactivate Player
    Common -> Collision: checkCollision(Entity, weapon, Entity, enemy)
    activate Collision
    Collision -> Collision: Collision(weapon, enemy)
    Collision -> Common:
    deactivate Collision
    Common -> Heart: update(Entity, enemy)
    activate Heart
    Heart -> Heart: updateHeart(enemy)
    Heart -> Common:
    deactivate Heart

    Common -> Core: update()
alt if enemy is dead
    Common -> Common: despawn(enemy)
    Common -> Core: update()
end


@enduml